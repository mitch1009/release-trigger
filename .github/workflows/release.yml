name:
     Release Trigger

on:
    push:
        tags:
            - v@*
    pull_request:
        types: [closed]

permissions:
    contents: read
    pull-requests: write
    issues: write
    id-token: write

jobs:
    initial-version:
        runs-on: ubuntu-latest
        name: Trigger Release
        if: github.event.pull_request.merged == true
        outputs:
            release_version: ${{ steps.release.outputs.release_version }}
            pr_log: ${{ steps.release.outputs.pr_log }}
        steps:
            - uses: actions/checkout@v4.1.7
            - name: Trigger Release
              id: release
              uses: ./release-trigger@main
              with:
                release_branch: main
                bump_script: release
                version_file_path: package.json
                git_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
                git_username: ${{ secrets.GIT_USER_NAME }}
                git_user_email: ${{ secrets.GIT_USER_EMAIL }}
                gpg_passphrase: ${{ secrets.GPG_PASSPHRASE }}
                gpg_secret: ${{ secrets.GPG_SECRET }}
    create-new-release:
        name: Create New Release 🎉
        runs-on: ubuntu-latest
        needs: [initial-version]
        if: needs.initial-version.outputs.release_version != ''
        permissions:
          contents: write
          id-token: write
          pull-requests: write
        
        steps:
          - name: Checkout code
            uses: actions/checkout@v4.1.7
            with:
              fetch-depth: 0  # Fetch all history for all tags and branches

            

          - name: Get contributors
            env:
              GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
            run: |
              CONTRIBUTORS=$(gh api repos/${{ github.repository }}/contributors --jq 'map(.login) | join(", @")')
              echo "CONTRIBUTORS=@$CONTRIBUTORS" >> $GITHUB_ENV

          - name: Create Release
            env:
              GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
            run: |
              gh release create microse-app@${{ needs.initial-version.outputs.release_version }} \
                --title "microse-app@${{ needs.initial-version.outputs.release_version }}" \
                --notes "## 🎍 What's new in this release:
                ${{ needs.initial-version.outputs.pr_log }}

                ---

                ## 👏 Thank You:

                A big thank you to all our amazing contributors
                "


            
